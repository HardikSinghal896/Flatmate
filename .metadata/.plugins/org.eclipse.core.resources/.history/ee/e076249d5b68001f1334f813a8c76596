package app.Configuration;
//
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

import app.entity.UserDetails;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
	
	@Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        return http.csrf(customizer -> customizer.disable())
        		.authorizeHttpRequests(request -> request.anyRequest().authenticated())
        		.httpBasic(Customizer.withDefaults())
        		.sessionManagement(session -> 
        		session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
        		.build();
    }
	
	@Bean
	public UserDetailsService userDetailsService() {
		UserDetails user1 = (UserDetails) User.withDefaultPasswordEncoder()
				.username("kiran")
				.password("k@123")
				.roles("USER")
				.build();
		UserDetails user2 = (UserDetails) User.withDefaultPasswordEncoder()
				.username("harsh")
				.password("h@123")
				.roles("ADMIN")
				.build();
		
		return new InMemoryUserDetailsManager();
	}
}